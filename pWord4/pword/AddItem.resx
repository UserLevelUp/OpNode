<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAAAAAAoAQAANgAAACAgEAAAAAAA6AIAAF4BAAAwMAIAAAAAADADAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAMXQ
        +gCAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wBu5ERmZmZuRu7uREZmbu5E7u5ERGju
        7kTu7uRETu7uRO5O7kTu5O5E7kTu7u5E7kTuRG7u5ETuRO5EZu5ERu5E7kRERmZm7kTu7u5ERmbuRO7u
        7uREZu5E7kRm7kRm7kTuRGbuRGbuRO5EZu5EZu5E7kRE7kRm7kTu7u7uRGbuRAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAA
        AAABAAQAAAAAAAACAAAAAAAAAAAAABAAAAAQAAAAX/WUAHgVBwBs4fIAtf//AOTzJwD/uf8ARkc4AICA
        gADAwMAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AF7u4RERFVVVVVVVVVVOERXu7u4RERFVVVVV
        VVVU7hER7u7u4RERFVVVVVVUTu4REe7u7uERERFVVVVVTu7uERHuHu7uERERFVVVVO7u7hER7uHu7kER
        ERVVXk7u7u4REe7h7u7kERERVeTu7u7uERHu4R7u7kERERRO7u4e7hER7uER7u5BERFO7u7h7u4REe7h
        EV7u5BEU7u7uEe7uERHu4REV7u5BTu7u4RHu7hER7uERFe7uBO7u7hER7u4REe7hERVe7u7u7uEREe7u
        ERHu4REVVe7u7u4RERXu7hER7uERFVVe7u7hERFVTu4REe7hERVVXu7u4REVVU7uERHu4REVVVXu4RER
        VVVO7hER7kQREREREVVVVVVVTu4REe7kTu7u7uERFVVVVU7uERHu7u7u7u7hEREVVVVO7hER7u7u7u7u
        5BERFVVVTu4REe7h7u7u7u7hERFVVU7uERHu4REVVVXu7hERVVVO7hER7uERFVVV7u4REVVVTu4REe7h
        ERVVVe7uERFVVU7uERHu4REVVVXu7hERVVVO7hER7uERFVVV7u4REVVVTu4REe7hERVVVe7uERFVVU7u
        ERHu4REREREe7hERVVVO7hER7u7u7u7u7u4REVVVRE4REe7u7u7u7u7kERFVVVVOERFe3u7u7u7pEREV
        VVVWVVVVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEAoAAAAMAAAAGAAAAABAAEAAAAAAIABAAAAAAAAAAAAAAIAAAACAAAAAAAAAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gD///8AAAP+AP///wAAA/4A////AAAD/gAf//8AAAP+A
        B///wAAA/4AH///AAADj8Af//8AAAOPwB///wAAA4/AH///AAADj/gH/8cAAAOP+Af/xwAAA4/4B//HA
        AADgf8H/j8AAAOB/wf+PwAAA4H/B/4/AAADgf//8D8AAAOB///wPwAAA4H///A/AAADgf//gD8AAAOB/
        /+APwAAA4H//4A/AAADgf/4Af8AAAOB//gB/wAAA4H/+AH/AAADgf/4Af8AAAPwPx///wAAA/A/H///A
        AAD//8Af/8AAAP//wB//wAAA///AH//AAAD///gD/8AAAP//+AP/wAAA///4A//AAADgf/4D/8AAAOB/
        /gP/wAAA4H/+A//AAADgf/4D/8AAAOB//gP/wAAA4H/+A//AAADgf/4D/8AAAOB//gP/wAAA4H/+A//A
        AAD8AD4D/8AAAPwAPgP/wAAA/AA+A//AAAD///gD//8AAP//+AP//wAA///4A///AAA=
</value>
  </data>
</root>